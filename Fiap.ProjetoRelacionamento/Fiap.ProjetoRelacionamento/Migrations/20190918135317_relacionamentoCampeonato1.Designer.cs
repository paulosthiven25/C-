// <auto-generated />
using System;
using Fiap.ProjetoRelacionamento.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fiap.ProjetoRelacionamento.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190918135317_relacionamentoCampeonato1")]
    partial class relacionamentoCampeonato1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fiap.ProjetoRelacionamento.Models.Campeonato", b =>
                {
                    b.Property<int>("CampeonatoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Premiacao");

                    b.Property<int>("TipoCampeonato");

                    b.HasKey("CampeonatoId");

                    b.ToTable("Campeonatos");
                });

            modelBuilder.Entity("Fiap.ProjetoRelacionamento.Models.CampeonatoTime", b =>
                {
                    b.Property<int>("CampeonatoId");

                    b.Property<int>("TimeId");

                    b.Property<int>("TipoCampeonato");

                    b.HasKey("CampeonatoId", "TimeId");

                    b.HasIndex("TimeId");

                    b.ToTable("CampeonatoTime");
                });

            modelBuilder.Entity("Fiap.ProjetoRelacionamento.Models.Jogador", b =>
                {
                    b.Property<int>("JogadorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Altura");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Nome");

                    b.Property<int>("TimeId");

                    b.HasKey("JogadorId");

                    b.HasIndex("TimeId");

                    b.ToTable("jogadores");
                });

            modelBuilder.Entity("Fiap.ProjetoRelacionamento.Models.Time", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Esporte");

                    b.Property<bool>("Mascote");

                    b.Property<string>("Nome");

                    b.Property<int>("TreinadorId");

                    b.HasKey("Codigo");

                    b.HasIndex("TreinadorId");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("Fiap.ProjetoRelacionamento.Models.Treinador", b =>
                {
                    b.Property<int>("TreinadorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<decimal>("Salario");

                    b.HasKey("TreinadorId");

                    b.ToTable("Treinadores");
                });

            modelBuilder.Entity("Fiap.ProjetoRelacionamento.Models.CampeonatoTime", b =>
                {
                    b.HasOne("Fiap.ProjetoRelacionamento.Models.Campeonato", "Campeonato")
                        .WithMany("CampeonatoTime")
                        .HasForeignKey("CampeonatoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Fiap.ProjetoRelacionamento.Models.Time", "Time")
                        .WithMany("CampeonatoTime")
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Fiap.ProjetoRelacionamento.Models.Jogador", b =>
                {
                    b.HasOne("Fiap.ProjetoRelacionamento.Models.Time", "Time")
                        .WithMany("Jogadores")
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Fiap.ProjetoRelacionamento.Models.Time", b =>
                {
                    b.HasOne("Fiap.ProjetoRelacionamento.Models.Treinador", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TreinadorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
